// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using website_shopping.Models.Contexts;

#nullable disable

namespace website_shopping.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20240310050248_init_db")]
    partial class init_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("website_shopping.Models.CategoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_category");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("name_category");

                    b.Property<DateTime>("TimeCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_create");

                    b.Property<DateTime>("TimeUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_update");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("website_shopping.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_order");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("address");

                    b.Property<string>("ListProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("list_product");

                    b.Property<bool>("PaymentMethods")
                        .HasColumnType("bit")
                        .HasColumnName("payment_method");

                    b.Property<bool>("Payment_Status")
                        .HasColumnType("bit")
                        .HasColumnName("payment_status");

                    b.Property<DateTime>("TimeCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_create");

                    b.Property<DateTime>("TimeUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_update");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("money")
                        .HasColumnName("total_money");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("username");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("website_shopping.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("description_product");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("name_product");

                    b.Property<DateTime>("TimeCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_create");

                    b.Property<DateTime>("TimeUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_update");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money")
                        .HasColumnName("unit_price");

                    b.Property<int>("id_category")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<int>("quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("id_category");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("website_shopping.Models.UserModel", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("username");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("password");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("website_shopping.Models.OrderModel", b =>
                {
                    b.HasOne("website_shopping.Models.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("website_shopping.Models.ProductModel", b =>
                {
                    b.HasOne("website_shopping.Models.CategoryModel", "CategoryModel")
                        .WithMany()
                        .HasForeignKey("id_category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryModel");
                });
#pragma warning restore 612, 618
        }
    }
}
